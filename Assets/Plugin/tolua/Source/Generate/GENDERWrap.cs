//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class GENDERWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(GENDER));
		L.RegVar("NONE", get_NONE, null);
		L.RegVar("man", get_man, null);
		L.RegVar("woman", get_woman, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
		TypeTraits<GENDER>.Check = CheckType;
		StackTraits<GENDER>.Push = Push;
	}

	static void Push(IntPtr L, GENDER arg)
	{
		ToLua.Push(L, arg);
	}

	static bool CheckType(IntPtr L, int pos)
	{
		return TypeChecker.CheckEnumType(typeof(GENDER), L, pos);
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_NONE(IntPtr L)
	{
		ToLua.Push(L, GENDER.NONE);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_man(IntPtr L)
	{
		ToLua.Push(L, GENDER.man);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_woman(IntPtr L)
	{
		ToLua.Push(L, GENDER.woman);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		GENDER o = (GENDER)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

